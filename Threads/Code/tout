import time
import concurrent.futures
import requests
import sys
import multiprocessing
import threading

img_urls = [
'https://elasq.com/wp-content/uploads/2021/09/car-18.png',
'https://www.pngpix.com/wp-content/uploads/2016/06/PNGPIX-COM-Orange-Lamborghini-Aventador-Coupe-Car-PNG-Image.png',
'https://cdn.pixabay.com/photo/2017/08/06/07/41/football-2589972_960_720.jpg',
]

def download_image(img_url):
    img_bytes = requests.get(img_url).content
    img_name = img_url.split('/')[7]
    with open(img_name, 'wb') as img_file:
        img_file.write(img_bytes)
        print(f"{img_name} was downloaded")

def telechargement_image(img_url):
    img_bytes = requests.get(img_url).content
    img_name = img_url.split('/')[7]
    with open(img_name, 'wb') as img_file:
        img_file.write(img_bytes)
        print(f"{img_name} was downloaded")

def descargar_imagen(img_url):
    img_bytes = requests.get(img_url).content
    img_name = img_url.split('/')[7]
    with open(img_name, 'wb') as img_file:
        img_file.write(img_bytes)
        print(f"{img_name} was downloaded")

if __name__ == '__main__' :
    start = time.perf_counter()
    t1 = threading.Thread(target=download_image)  # cr√©ation de la thread
    t1.start()
    t1.join()
    end = time.perf_counter()
    print(f"Tasks ended in {round(end - start, 2)} second(s)")


    start = time.perf_counter()
    with concurrent.futures.ThreadPoolExecutor() as executor:
        executor.map(telechargement_image, img_urls)
    end = time.perf_counter()
    print(f"Tasks ended in {round(end - start, 2)} second(s)")

    start = time.perf_counter()
    p1 = multiprocessing.Process(target=descargar_imagen)
    p1.start()
    p1.join()
    end = time.perf_counter()
    print(f"Tasks ended in {round(end - start, 2)} second(s)")
